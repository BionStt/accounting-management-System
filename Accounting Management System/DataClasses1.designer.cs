#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Accounting_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AccountingDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccounting(Accounting instance);
    partial void UpdateAccounting(Accounting instance);
    partial void DeleteAccounting(Accounting instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Accounting_Management_System.Properties.Settings.Default.AccountingDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Accounting> Accountings
		{
			get
			{
				return this.GetTable<Accounting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounting")]
	public partial class Accounting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _acc_id;
		
		private string _acc_hd;
		
		private string _rept_hd;
		
		private string _vchr_hd;
		
		private double _bill_amnt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onacc_idChanging(int value);
    partial void Onacc_idChanged();
    partial void Onacc_hdChanging(string value);
    partial void Onacc_hdChanged();
    partial void Onrept_hdChanging(string value);
    partial void Onrept_hdChanged();
    partial void Onvchr_hdChanging(string value);
    partial void Onvchr_hdChanged();
    partial void Onbill_amntChanging(double value);
    partial void Onbill_amntChanged();
    #endregion
		
		public Accounting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acc_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int acc_id
		{
			get
			{
				return this._acc_id;
			}
			set
			{
				if ((this._acc_id != value))
				{
					this.Onacc_idChanging(value);
					this.SendPropertyChanging();
					this._acc_id = value;
					this.SendPropertyChanged("acc_id");
					this.Onacc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acc_hd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string acc_hd
		{
			get
			{
				return this._acc_hd;
			}
			set
			{
				if ((this._acc_hd != value))
				{
					this.Onacc_hdChanging(value);
					this.SendPropertyChanging();
					this._acc_hd = value;
					this.SendPropertyChanged("acc_hd");
					this.Onacc_hdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rept_hd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string rept_hd
		{
			get
			{
				return this._rept_hd;
			}
			set
			{
				if ((this._rept_hd != value))
				{
					this.Onrept_hdChanging(value);
					this.SendPropertyChanging();
					this._rept_hd = value;
					this.SendPropertyChanged("rept_hd");
					this.Onrept_hdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchr_hd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string vchr_hd
		{
			get
			{
				return this._vchr_hd;
			}
			set
			{
				if ((this._vchr_hd != value))
				{
					this.Onvchr_hdChanging(value);
					this.SendPropertyChanging();
					this._vchr_hd = value;
					this.SendPropertyChanged("vchr_hd");
					this.Onvchr_hdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_amnt", DbType="Float NOT NULL")]
		public double bill_amnt
		{
			get
			{
				return this._bill_amnt;
			}
			set
			{
				if ((this._bill_amnt != value))
				{
					this.Onbill_amntChanging(value);
					this.SendPropertyChanging();
					this._bill_amnt = value;
					this.SendPropertyChanged("bill_amnt");
					this.Onbill_amntChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
